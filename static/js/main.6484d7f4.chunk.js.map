{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","addContact","createAction","name","contact","payload","id","uuid","number","deleteContact","changeFilter","def","safeContactsToLocal","newState","window","localStorage","setItem","JSON","stringify","items","createReducer","getItem","parse","state","filter","_","contactsReducer","combineReducers","store","configureStore","reducer","contacts","mapDispatchToProps","connect","useState","setName","setNumber","handleOnChange","e","target","type","value","onSubmit","some","alert","preventDefault","className","s","form","label","input","onChange","pattern","title","required","btn","visibleContacts","allContacts","normalizeFilter","toLowerCase","includes","length","list_title","list","map","list_item","href","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6484d7f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3TRym\"};","import { v4 as uuid } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/addContact', (name, contact) => ({\n  payload: { id: uuid(), name: name, number: contact },\n}));\n\nconst deleteContact = createAction('contact/deleteContact');\n\nconst changeFilter = createAction('contacts/onChangeFilter');\n\nexport { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\n\n//init first state from localStorage\nconst def = [\n  { id: '3145q6', name: 'Bill Gatesevich', number: '044242424600' },\n  { id: '6531q4', name: 'Mark Zuckerman', number: '062746004242' },\n  { id: '3131q6', name: 'Linus Torvaldsiuk', number: '057242424600' },\n  { id: 'q53143', name: 'Jeff Bezenko', number: '064723004242' },\n];\n\nconst initialState = () => {\n  if (!window.localStorage.getItem('contacts')) {\n    window.localStorage.setItem('contacts', JSON.stringify(def));\n  }\n  return JSON.parse(window.localStorage.getItem('contacts'));\n};\n\n//write to localStorage\nconst safeContactsToLocal = newState =>\n  window.localStorage.setItem('contacts', JSON.stringify(newState));\n\n//\nconst items = createReducer(initialState(), {\n  [addContact]: (state, { payload }) => {\n    let newState = [...state, payload];\n    safeContactsToLocal(newState);\n    return newState;\n  },\n\n  [deleteContact]: (state, { payload }) => {\n    let newState = state.filter(({ id }) => id !== payload);\n    safeContactsToLocal(newState);\n    return newState;\n  },\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default contactsReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport s from \"./Form.module.css\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions.js\"\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n//\r\nconst ContactForm = ({addContact, contacts}) => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleOnChange = (e) => {\r\n    const { type, value } = e.target;\r\n    switch(type) {\r\n      case 'text':\r\n        setName(value);\r\n        break;\r\n      case 'tel':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    const id = uuid();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in your phonebook.`)\r\n      return;\r\n    } else if (contacts.some(contact => contact.number === number)) {\r\n      alert(`Person with number ${number} is already in your phonebook.`)\r\n      return;\r\n    }\r\n    addContact(name,number)\r\n    setName('');\r\n    setNumber('');\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            onChange={handleOnChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          </label>\r\n  \r\n        <label className={s.label}>\r\n          Number &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            onChange={handleOnChange}\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          </label>\r\n\r\n          <button className={s.btn} type=\"onSubmit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n//\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items\r\n})\r\n\r\nconst mapDispatchToProps = { addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n\r\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions.js\"\n\nimport s from \"./Filter.module.css\";\n\n//\nconst Filter = ({ value, changeFilter }) => {\n  \n  return (\n      <label>Find contacts by name &nbsp;\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(e) => changeFilter(e.target.value)}\n        ></input>\n        </label>\n\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n//\n\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = { changeFilter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { deleteContact, changeFilter } from \"../../redux/contacts/contacts-actions.js\"\nimport s from \"./ContactsList.module.css\";\n\n\n//\nconst ContactsList = ({ contacts, deleteContact }) => {\n  \n  return (\n    <>\n      {!contacts.length && <h4>Contacts list is empty.</h4>}\n      {!!contacts.length && \n      <> \n        <h4 className={s.list_title}>Contacts list:</h4>\n        <ul className={s.list}>\n          {contacts.map(({ id, name, number }) => (\n            <li\n              key={id}\n              className={s.list_item}\n            >\n\n              <a href={\"tel:\" + { number }}>\n                <span className={s.name}>{name}&nbsp;:</span>\n                <span className={s.number}>{number}</span>\n              </a>\n\n              <button\n                type=\"button\"\n                className={s.btn}\n                onClick={() => deleteContact(id)}\n              >\n                <span className=\"material-icons\">delete</span>\n              </button>\n            </li>))}\n        </ul>\n        </>\n      }\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n};\n//\n\nconst visibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter((contact) => (\n    contact.name.toLowerCase().includes(normalizeFilter)))\n};\n\n\nconst mapStateToProps = (state) => ({\n  contacts: visibleContacts(state.contacts.items, state.contacts.filter)\n});\n\nconst mapDispatchToProps = { deleteContact, changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList)\n\n","import React from 'react';\nimport ContactForm from './components/Form/Form.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport ContactsList from './components/ContactsList/ContactsList.jsx';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <Filter />\n\n      <ContactForm />\n\n      <ContactsList />\n    </>\n  );\n}\n\n//const [filter, setFilter] = useState('');\n//const [localStorageState, setLocalStorageState] = useState(true);\n\n//const onFilterChange = e => setFilter(e.currentTarget.value);\n\n//const onLocalStorageChange = () => {\n//  setLocalStorageState(pre => !pre);\n//};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store.js';\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ZnlK-\",\"label\":\"Form_label__1_Dc5\",\"input\":\"Form_input__3uH4w\",\"btn\":\"Form_btn__3cWUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1B49m\",\"list_title\":\"ContactsList_list_title__5-4ZP\",\"list_item\":\"ContactsList_list_item__4W8Kl\",\"name\":\"ContactsList_name__2Uahx\",\"number\":\"ContactsList_number__3tOHt\",\"btn\":\"ContactsList_btn__2sbAe\"};"],"sourceRoot":""}