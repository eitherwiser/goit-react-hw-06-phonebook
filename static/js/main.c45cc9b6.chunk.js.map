{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-constants.js","redux/contacts/contacts-reducers.js","redux/root-reducer.js","redux/store.js","redux/contacts/contacts-actions.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","def","id","name","number","initialState","window","localStorage","getItem","setItem","JSON","stringify","parse","contactsReducer","combineReducers","items","state","action","newState","safeContactsToLocal","type","types","payload","filter","console","log","rootReducer","contacts","store","createStore","composeWithDevTools","changeFilter","value","mapDispatchToProps","addContact","contact","connect","useState","setName","setNumber","handleOnChange","e","target","onSubmit","uuid","some","alert","preventDefault","className","s","form","label","input","onChange","pattern","title","required","btn","visibleContacts","allContacts","normalizeFilter","toLowerCase","includes","deleteContact","length","list_title","list","map","list_item","href","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45cc9b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3TRym\"};","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  ADD_CONTACT: 'contact/addContact',\n  DELETE_CONTACT: 'contact/deleteContact',\n  CHANGE_FILTER: 'contacts/filter',\n};\n","import { combineReducers } from 'redux';\nimport types from './contacts-constants';\n\nconst def = [\n  { id: '3145q6', name: 'Bill Gatesevich', number: '044242424600' },\n  { id: '4531q6', name: 'Mark Zuckerman', number: '062746004242' },\n  { id: '3131q6', name: 'Linus Torvaldsiuk', number: '057242424600' },\n  { id: 'q53143', name: 'Jeff Bezenko', number: '064723004242' },\n];\n\nconst initialState = () => {\n  if (!window.localStorage.getItem('contacts')) {\n    window.localStorage.setItem('contacts', JSON.stringify(def));\n  }\n  return JSON.parse(window.localStorage.getItem('contacts'));\n};\n//\n\nconst items = (state = initialState(), action) => {\n  let newState = [];\n  const safeContactsToLocal = () =>\n    window.localStorage.setItem('contacts', JSON.stringify(newState));\n  switch (action.type) {\n    case types.ADD_CONTACT:\n      newState = [...state, action.payload];\n      safeContactsToLocal();\n      return newState;\n\n    case types.DELETE_CONTACT:\n      newState = state.filter(({ id }) => id !== action.payload);\n      safeContactsToLocal();\n      console.log(newState);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default contactsReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './root-reducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import types from './contacts-constants.js';\n\nconst addContact = contact => ({\n  type: types.ADD_CONTACT,\n  payload: contact,\n});\n\nconst deleteContact = id => ({\n  type: types.DELETE_CONTACT,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport { addContact, deleteContact, changeFilter };\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuid } from 'uuid';\nimport s from \"./Form.module.css\";\nimport { addContact } from \"../../redux/contacts/contacts-actions.js\"\nimport { connect } from \"react-redux\";\n\n\n//\nconst ContactForm = ({addContact, contacts}) => {\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleOnChange = (e) => {\n    const { type, value } = e.target;\n    switch(type) {\n      case 'text':\n        setName(value);\n        break;\n      case 'tel':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = (e) => {\n    const id = uuid();\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in your phonebook.`)\n      return;\n    } else if (contacts.some(contact => contact.number === number)) {\n      alert(`Person with number ${number} is already in your phonebook.`)\n      return;\n    }\n    addContact({id: id, name: name, number: number})\n    setName('');\n    setNumber('');\n    e.preventDefault();\n  };\n\n\n  return (\n    <div>\n        <form onSubmit={onSubmit} className={s.form}>\n        <label className={s.label}>\n          Name &nbsp;&nbsp;&nbsp;&nbsp;\n          <input\n            className={s.input}\n            type=\"text\"\n            onChange={handleOnChange}\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          </label>\n  \n        <label className={s.label}>\n          Number &nbsp;\n          <input\n            className={s.input}\n            type=\"tel\"\n            onChange={handleOnChange}\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          </label>\n\n          <button className={s.btn} type=\"onSubmit\">\n            Add contact\n          </button>\n        </form>\n    </div>\n    \n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n};\n//\n\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items\n})\n\nconst mapDispatchToProps = { addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\n\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions.js\"\n\nimport s from \"./Filter.module.css\";\n\n//\nconst Filter = ({ value, changeFilter }) => {\n  \n  return (\n      <label>Find contacts by name &nbsp;\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(e) => changeFilter(e.target.value)}\n        ></input>\n        </label>\n\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n//\n\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = { changeFilter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { deleteContact, changeFilter } from \"../../redux/contacts/contacts-actions.js\"\nimport s from \"./ContactsList.module.css\";\n\n\n//\nconst ContactsList = ({ contacts, deleteContact }) => {\n  \n  return (\n    <>\n      {!contacts.length && <h4>Contacts list is empty.</h4>}\n      {!!contacts.length && \n      <> \n        <h4 className={s.list_title}>Contacts list:</h4>\n        <ul className={s.list}>\n          {contacts.map(({ id, name, number }) => (\n            <li\n              key={id}\n              className={s.list_item}\n            >\n\n              <a href={\"tel:\" + { number }}>\n                <span className={s.name}>{name}&nbsp;:</span>\n                <span className={s.number}>{number}</span>\n              </a>\n\n              <button\n                type=\"button\"\n                className={s.btn}\n                onClick={() => deleteContact(id)}\n              >\n                <span className=\"material-icons\">delete</span>\n              </button>\n            </li>))}\n        </ul>\n        </>\n      }\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })),\n};\n//\n\nconst visibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n  return allContacts.filter((contact) => (\n    contact.name.toLowerCase().includes(normalizeFilter)))\n};\n\n\nconst mapStateToProps = (state) => ({\n  contacts: visibleContacts(state.contacts.items, state.contacts.filter)\n});\n\nconst mapDispatchToProps = { deleteContact, changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList)\n\n","import React from 'react';\nimport ContactForm from './components/Form/Form.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport ContactsList from './components/ContactsList/ContactsList.jsx';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <Filter />\n\n      <ContactForm />\n\n      <ContactsList />\n    </>\n  );\n}\n\n//const [filter, setFilter] = useState('');\n//const [localStorageState, setLocalStorageState] = useState(true);\n\n//const onFilterChange = e => setFilter(e.currentTarget.value);\n\n//const onLocalStorageChange = () => {\n//  setLocalStorageState(pre => !pre);\n//};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store.js';\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__ZnlK-\",\"label\":\"Form_label__1_Dc5\",\"input\":\"Form_input__3uH4w\",\"btn\":\"Form_btn__3cWUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1B49m\",\"list_title\":\"ContactsList_list_title__5-4ZP\",\"list_item\":\"ContactsList_list_item__4W8Kl\",\"name\":\"ContactsList_name__2Uahx\",\"number\":\"ContactsList_number__3tOHt\",\"btn\":\"ContactsList_btn__2sbAe\"};"],"sourceRoot":""}